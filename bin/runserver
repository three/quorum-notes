#!/usr/bin/env zsh
set -eu -o pipefail
zparseopts -D -E l=OPT_LOCAL p=OPT_PROD c=OPT_CYPRESS -help=OPT_HELP

[[ -n $OPT_HELP ]] && cat <<EOF && exit 0
Calls manage.py runserver_plus

Manages a pidfile at \$HOME/pids/runserver.pid

Options:
    -l
        Sets environment variables to local options beforehand
    -p
        Sets environment variables to prod options beforehand
    -c
        Sets environment variables to cypress options beforehand
EOF

ARGS=()
N=0

if [[ -n $OPT_LOCAL ]]; then
    export USE_NONDOCKERIZED_LOCAL_DB=True
    export DOCKER_TESTING_LOCAL_ES=True
    N=$(($N+1))
fi

if [[ -n $OPT_PROD ]]; then
    export USE_PROD_DB=True
    N=$(($N+1))
fi

if [[ -n $OPT_CYPRESS ]]; then
    export USE_NONDOCKERIZED_LOCAL_DB=True
    export DOCKER_TESTING_LOCAL_ES=True
    ARGS+=(--settings=cypress_ci_settings)
    N=$(($N+1))
fi

if [[ $N -gt 1 ]]; then
    echo "Can only accept one of -l, -p or -c"
    exit 1
fi

# PID_FILE="$HOME/pids/runserver.pid"
# [[ -f "$PID_FILE" ]] && \
#     ps -p "$(cat "$PID_FILE")" | grep -q 'python\s+manage.py\s+runserver' && \
#     kill -- "$(cat "$PID_FILE")" || true
# echo $$ >"$PID_FILE"

set -x
exec ./venv/bin/python manage.py runserver_plus $ARGS $@
